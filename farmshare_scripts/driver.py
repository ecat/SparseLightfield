import os

# read in urls of images to reconstruct
file_image_list = open('farmshare_run/target_images.txt', 'r')
image_urls = []

for line in file_image_list:
	image_urls.append(line.rstrip()) # read file and remove newlines

file_image_list.close()

num_images = len(image_urls)

for n in range(0, num_images):

	image_url = image_urls[n].rstrip()
	filename = image_url.split('/')[-1].rstrip() # get filename from url

	# command to download image and place into run folder
	curl_command = 'curl %s > farmshare_run/run%d/%s' % (image_url, n, filename)
	delete_command = 'rm farmshare_run/run%d/%s' %(n, filename)

	# generate matlab script to download lightfield, call reconstruction function, delete lightfield
	matlabstartup = '''
%% SCRIPT GENERATED BY driver.py

addpath('spgl1-1.9');

%% download lightfield image
display('Downloading lightfield image')
system('%s')

%% perform reconstruction
display('Doing reconstruction')
[originalLF reconstructionResults] = lightfield_reconstruction('farmshare_run/run%d/%s');

%% delete lightfield image to preserve disk space
display('Deleting lightfield image')
system('%s')

%% print results to a file
save('farmshare_run/run%d/reconstructionResults.mat', 'reconstructionResults')
	'''% (curl_command, n, filename, delete_command, n)

	# create run folder
	os.mkdir('farmshare_run/run%d' % n)

        runfile = open('farmshare_run/run%d/run.m' % n, 'w')
        runfile.write(matlabstartup)
        runfile.close()
	
	qsubscript = '''#!/bin/bash

#$ -N %s
#$ -o farmshare_run/run%d/job.out
#$ -e farmshare_run/run%d/job.error
#$ -cwd
#$ -S /bin/bash
#$ -pe shm 12

module load matlab
matlab -nodesktop < farmshare_run/run%d/run.m
	''' % (filename.split('.')[0], n,n,n)

        qsubfile = open('farmshare_run/run%d/run.submit' % n, 'w')
        qsubfile.write(qsubscript)
        qsubfile.close()

        os.system('qsub farmshare_run/run%d/run.submit' % n)
